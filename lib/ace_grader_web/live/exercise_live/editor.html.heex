<div class="space-y-8">
<div class="flex items-center justify-between">
  <div>
    <h1 class="text-3xl font-bold"><%= @exercise.title %></h1>
    <p><%= @exercise.description %></p>
  </div>
  <.back navigate={~p"/exercises/#{@exercise}"}><%= gettext "Back to exercise" %></.back>
</div>

<div>
  <div id="editor_container" phx-update="ignore">
    <div id="editor_loading" class="flex items-center justify-center flex-col text-2xl gap-2">
      <p><%= gettext "Loading editor" %></p>
      <Heroicons.cog_6_tooth class="w-10 animate-[reverse-spin_3s_linear_infinite]"/>
    </div>

    <div id="editor" class="editor" phx-hook="Editor">int main() {
    int x = 5;
    printf("%d\n", x);
    return 0;
}</div>
  </div>

  <div class="py-4 flex justify-center gap-6">
    <.button id="test_button" phx-hook="TestButton" disabled={@testing}>
      <%= if @testing, do: gettext("Running..."), else: pgettext("verb", "Test") %>
    </.button>
    <.button id="submit_button" phx-click={JS.push("show_confirm")}><%= gettext "Submit" %></.button>
  </div>
</div>

<.simple_form :let={f} hidden for={@submission} phx-submit="submit_code" id="submit_form" phx-update="ignore">
  <.input hidden type="hidden" field={f[:exercise_id]} phx-update="ignore" value={@exercise.id}></.input>
  <.input hidden type="hidden" field={f[:code]} id="editor_code" phx-update="ignore"></.input>
  <.inputs_for :let={tf} field={f[:tests]}>
    <.input field={tf[:input]} type="hidden" label="Input" />
    <.input field={tf[:type]} type="hidden" options={["Exact": "exact", "Regex": "regex", "Items": "items"]} label="Output Type" />
    <.input field={tf[:expected_output]} type="hidden" label="Output Value" />
    <.input field={tf[:grade]} type="hidden" label="Grade %" />
  </.inputs_for>
  <%!-- <textarea hidden id="editor_code"></textarea> --%>
  <%!-- <:actions>
    <.button id="submit_button">Submit</.button>
  </:actions> --%>
</.simple_form>

<.compilation_results :if={@test_results != nil} warnings={@warnings} errors={@errors} />
<.test_results :if={@test_results != nil and @success and length(@test_results) > 0} tests={@test_results}/>

<.modal :if={@confirm_modal} id="confirm-modal" show={@confirm_modal} on_cancel={JS.push("hide_confirm")} on_confirm={JS.dispatch("submit", to: "#submit_form")}>
  <p><%= gettext "Are you sure you want to submit your answer?" %></p>
  <:cancel><%= gettext "No" %></:cancel>
  <:confirm><%= gettext "Yes" %></:confirm>
</.modal>

</div>