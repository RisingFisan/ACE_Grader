<div class="space-y-8">
<div class="flex items-center justify-between gap-4">
  <div>
    <h1 class="text-3xl font-bold"><%= @exercise.title %></h1>
  </div>
  <.back navigate={~p"/exercises/#{@exercise}"}><%= gettext "Back to exercise" %></.back>
</div>

<div id="description" class="description" phx-update="ignore">
  <.markdown_text content={@exercise.description} />
</div>

<div class="flex flex-col items-center">
  <button class="bg-zinc-300 dark:bg-zinc-600 px-4 py-2 rounded-lg description" phx-click={JS.toggle(to: ".description")}>
    <div class="flex items-center gap-1">
    <Heroicons.chevron_double_up class="w-4" />
    <p class="tracking-wide">
      <%= gettext("Hide description") %>
    </p>
    <Heroicons.chevron_double_up class="w-4" />
    </div>
  </button>
  <button class="bg-zinc-300 dark:bg-zinc-600 px-4 py-2 rounded-lg description" hidden phx-click={JS.toggle(to: ".description")}>
    <div class="flex items-center gap-1">
    <Heroicons.chevron_double_down class="w-4" />
    <p class="tracking-wide">
      <%= gettext("Show description") %>
    </p>
    <Heroicons.chevron_double_down class="w-4" />
    </div>
  </button>
</div>

<div class="space-y-4">
  <div id="editor-container" class="editor-container" phx-update="ignore">
    <div id="editor-loading" class="editor-loading">
      <p><%= gettext "Loading editor" %></p>
      <Heroicons.cog_6_tooth class="w-10 animate-[reverse-spin_3s_linear_infinite]"/>
    </div>

    <div id="editor" class="editor" phx-hook="Editor"><p class="hidden"><%= @exercise.template || "" %></p></div>
  </div>
  <div class="flex justify-end gap-2">
    <button class={["border border-zinc-500 rounded-lg px-2 py-1",
    (if @wrapped == 1, do: "bg-zinc-200 dark:bg-zinc-500")
    ]
    } phx-click="text_wrap" phx-value-wrap={@wrapped}>Text wrap</button>
    <button class={["border border-zinc-500 rounded-lg px-1 py-1",
    (if @expanded == 1, do: "bg-zinc-200 dark:bg-zinc-500")
    ]
    } phx-click="expand_editor" phx-value-expand={@expanded}>
      <%= if @expanded == 0 do %>
        <Heroicons.arrows_pointing_out class="w-6"/>
      <% else %>
        <Heroicons.arrows_pointing_in class="w-6"/>
      <% end %>
    </button>
  </div>

  <div class="grid grid-cols-1 sm:grid-cols-[1fr_min-content_1fr] justify-center place-items-center gap-2">
    <button id="test_button" class="w-36 sm:justify-self-end font-bold text-xl bg-zinc-300 dark:bg-zinc-700 px-4 py-2 rounded-xl hover:bg-zinc-400 dark:hover:bg-zinc-600" phx-hook="TestButton" disabled={@testing}>
      <%= if @testing, do: gettext("Running..."), else: pgettext("verb", "Test") %>
    </button>
    <div class="bg-zinc-300 dark:bg-zinc-600 h-[1px] sm:h-auto sm:w-[1px] place-self-stretch"></div>
    <.button id="submit_button" class="w-48 h-16 sm:place-self-start" phx-click={JS.push("show_confirm")}><span class="text-2xl"><%= gettext "Submit" %></span></.button>
  </div>
</div>

<.simple_form :let={f} hidden for={@changeset} phx-submit="submit_code" id="submit_form" phx-update="ignore">
  <.input hidden type="hidden" field={f[:code]} id="editor-code" phx-update="ignore"></.input>
</.simple_form>

<.compilation_results :if={@success != nil} status={if @success, do: :success, else: :error} message={@compilation_msg}/>
<.test_results :if={@success && length(@test_results) > 0} tests={@test_results} editor />
<.parameter_results :if={@success && length(@parameter_results) > 0} parameters={@parameter_results} editor />

<.modal :if={@confirm_modal} id="confirm-modal" show={@confirm_modal} on_cancel={JS.push("hide_confirm")} on_confirm={JS.dispatch("submit", to: "#submit_form")}>
  <:title><%= gettext "Are you sure you want to submit your answer?" %></:title>
  <:cancel><%= gettext "No" %></:cancel>
  <:confirm><%= gettext "Yes" %></:confirm>
</.modal>

</div>