<.header>
  <%= if assigns[:exercise] do %>
    <%= gettext "Editing exercise %{exercise_name}", exercise_name: @exercise.title %>
  <% else %>
    <%= gettext "New exercise" %>
  <% end %>
  
  <:actions>
    <%= if assigns[:exercise] do %>
      <.back changes={@form.action != nil} navigate={~p"/exercises/#{@exercise}"}><%= gettext "Back to exercise" %></.back>
    <% else %>
      <.back changes={@form.action != nil} navigate={~p"/exercises/"}><%= gettext "Back to exercises" %></.back>
    <% end %>
  </:actions>
</.header>

<script>
window.addEventListener('phx:undo_language_change', (e) => {
  document.getElementById('exercise_language').value = e.detail['language'];
})
</script>

<.modal :if={@new_language != nil} show id="confirm_change_language" on_confirm={JS.push("confirm_change_language")} on_cancel={JS.push("cancel_change_language")}>
  <p>Are you sure you want to change this exercise's language? Existing file data will be lost.</p>
  <:confirm>Yes</:confirm>
  <:cancel>No</:cancel>
</.modal>

<.simple_form 
  for={@form} 
  phx-change="validate" 
  phx-submit="save" 
  action={if assigns[:exercise], do: ~p"/exercises/#{@exercise}", else: ~p"/exercises"}
  class="my-8">
  <%!-- <.error :if={@changeset.action}>
    Oops, something went wrong! Please check the errors below.
  </.error> --%>
  <.input field={@form[:title]} type="text" label={gettext "Title"} />
  <div id="desc-container" phx-update="ignore">
    <.input id="description-form" field={@form[:description]} type="hidden" label={gettext("Description") <> " (Markdown)"}/>
    <div id="description" class="text-lg border-2 dark:border-zinc-800" phx-hook="MdEditor"><p class="hidden"><%= @form[:description].value %></p></div>
  </div>
  <.input field={@form[:language]} type="select" options={[ {"C", "c"}, {"Haskell", "haskell"}] } label={pgettext("programming", "Language")} phx-change="change_language"/>
  <div class="flex items-center gap-4">
    <div class="w-48">
        <.input field={@form[:visibility]} type="select" options={[{gettext("Public"), "public"}, {gettext("Class"), "class"}, {gettext("Private"), "private"}]} label={gettext("Visibility")}/>
    </div>
    <.help>
      <p><b><%= gettext "Public" %>:</b> <%= gettext "This exercise is displayed on the \"Exercises\" page for anyone to solve." %></p>
      <p><b><%= gettext "Class" %>:</b> <%= gettext "Only students from the specified class(es) can see this exercise." %></p>
      <p><b><%= gettext "Private" %>:</b> <%= gettext "This exercise is accessible only through its URL." %></p>
    </.help>
  </div>
  <div :if={@form[:visibility].value == :class}>
    <%= for {class, i} <- Enum.with_index(@classes) do %>
      <input type="checkbox" checked={class in @current_classes} name={"exercise[exercise_classes][#{i}][class_id]"} id={class.id} phx-update="ignore" value={class.id}/>
        <%= class.name %>
    <% end %>
  </div>
  <div class="flex items-start gap-4">
    <div class="flex-1">
      <.label>
        <%= gettext("Test file") %>
      </.label>
      <.editor id="test-file-component" field={@form[:test_file]} language={@form[:language].value}  initial_value={@form[:test_file].value} />
    </div>
    <.help right>
      <p><%= gettext "This file is used to test the submitted code." %></p>
      <p><%= gettext "For example, if the exercise consists of defining a function, this file should call that function to ensure that it is defined correctly." %></p>
      <p><%= gettext "You can use the standard input/output alongside one or more tests (defined below) to check for specific cases." %></p>
    </.help>
  </div>
  <div class="flex items-start gap-4">
    <div class="flex-1">
      <.label>
        <%= gettext("Submission template") %>
      </.label>
      <.editor id="template-component" field={@form[:template]} language={@form[:language].value} initial_value={@form[:template].value} />
    </div>
    <.help right>
      <p><%= gettext "This code is shown to students as a template that they must complete." %></p>
      <p><%= gettext "You can use it to display a skeleton of the solution, provide initial values for specific variables or define helper functions, for example." %></p>
    </.help>
  </div>

  <div class="flex items-center gap-3">
  <.input field={@form[:testing_enabled]} type="checkbox" label={gettext "Enable testing before submitting?"}/>
    <.help>
      <p class="lg:w-[50vw]"><%= gettext "When this option is enabled, students are able to test their solution prior to submitting it, using the tests that are tagged as \"visible\"."%></p>
    </.help>
  </div>

  <h2 class="text-2xl font-bold"><%= gettext "Tests" %></h2>
  <.inputs_for :let={tf} field={@form[:tests]}>
    <input type="hidden" name="exercise[tests_order][]" value={tf.index} />
    <div class="bg-zinc-200 dark:bg-zinc-800 p-4 rounded-xl border-2 border-zinc-300 dark:border-zinc-700">
      <div class={["space-y-2", (if tf[:delete].value == "true", do: "blur-sm")]}>
        <.input field={tf[:description]} type="text" label={gettext "Description"} placeholder={gettext("If left empty, the input will be used as the description.")} />
        <.input field={tf[:input]} type="textarea" label={gettext "Input"} mono />
        <div class="flex w-full items-center gap-5">
          <div class="w-48">
            <.input field={tf[:type]} type="select" options={[ {gettext("Exact"), "exact"}, {gettext("Regex"), "regex"}, {gettext("Items"), "items"}] } label={gettext "Output type"} />
          </div>
          <.help>
            <div class="lg:w-[50vw] text-justify">
              <p><b><%= gettext "Optional" %></b>: <%= gettext "if the parameter fails, a warning will be displayed, but it won't affect a submission's total grade." %></p>
              <p><b><%= gettext "Graded" %></b>: <%= gettext "the parameter's grade contributes to a submission's total grade." %></p>
              <p><b><%= gettext "Mandatory" %></b>: <%= gettext "the parameter must be passed in order for a submission to be graded, otherwise the total grade will always be 0%." %></p>
            </div>
          </.help>
        </div>
        <.input field={tf[:expected_output]} type="textarea" label={gettext "Expected output"} mono />
        <.input field={tf[:grade]} type="range" min={0} max={100} label={ gettext "Grade %" }/>
        <.input field={tf[:visible]} type="checkbox" label={ gettext "Visible to students before submitting? (only applies when testing before submitting is enabled)"} />
      </div>
      <label class="cursor-pointer">
        <input id={"checkbox_test_#{tf.index}"} type="checkbox" name="exercise[tests_delete][]" class="hidden" value={tf.index}/>
        <div class="w-full flex items-center justify-end gap-2 px-4 text-red-600">
          <.icon name="hero-trash" class="w-6 h-6"/>
          <p class="text-red-600"><%= gettext "Delete" %></p>
        </div>
      </label>
    </div>
  </.inputs_for>
  <label class="cursor-pointer flex flex-col items-center">
    <input type="checkbox" name="exercise[tests_order][]" class="hidden" />
    <div class="flex items-center gap-2 bg-zinc-300 dark:bg-zinc-600 hover:bg-zinc-400 dark:hover:bg-zinc-500 px-4 py-2 rounded-lg duration-200">
      <.icon name="hero-plus-circle" class="w-6 h-6"/>
      <p><%= gettext "Add test" %></p>
    </div>
  </label>
  <!-- <div class="flex flex-col items-center">
    <button type="button" phx-click="add-test" class="mx-auto bg-zinc-300 dark:bg-zinc-500 hover:bg-zinc-400 dark:hover:bg-zinc-400 px-4 py-2 rounded-lg duration-200"><%= "+ " <> gettext "Add test" %></button>
  </div> -->

  <h2 class="text-2xl font-bold"><%= gettext "Parameters" %></h2>
  <%= if (@form[:language].value |> to_string()) in ["c"] do %>
  <.inputs_for :let={pf} field={@form[:parameters]}>
    <input type="hidden" name="exercise[params_order][]" value={pf.index} />
    <div class="bg-zinc-200 dark:bg-zinc-800 p-4 rounded-xl border-2 border-zinc-300 dark:border-zinc-700">
      <div class={["space-y-2", (if pf[:delete].value == "true", do: "blur-sm")]}>
        <%!-- <.input field={pf[:description]} type="text" label={gettext "Description"} placeholder={gettext("If left empty, the input will be used as the description.")} /> --%>
        <div class="grid grid-cols-[1fr_min-content] items-center gap-4">
        <.input field={pf[:key]} type="select" options={AceGraderWeb.Utils.get_keys() |> Map.to_list() |> Enum.map(fn {a, b} -> {b, a} end)} label={gettext "Check if"} />
        <.input field={pf[:negative]} type="checkbox" label={gettext "Invert?"}/>
        </div>
        <%= if pf[:key].value && pf[:key].value >= 10 do %>
          <.input field={pf[:value]} type="text" label={gettext "Function name"} mono />
        <% end %>
        <div class="flex w-full items-center gap-5">
          <div class="w-48">
            <.input field={pf[:type]} type="select" options={[ {gettext("Optional"), "optional"}, {gettext("Graded"), "graded"}, {gettext("Mandatory"), "mandatory"}] } label={gettext "Parameter type"} />
          </div>
          <.help>
            <p><b><%= gettext "Optional" %></b>: <%= gettext "if the parameter fails, a warning will be displayed, but it won't affect a submission's total grade." %></p>
            <p><b><%= gettext "Graded" %></b>: <%= gettext "the parameter's grade contributes to a submission's total grade." %></p>
            <p><b><%= gettext "Mandatory" %></b>: <%= gettext "the parameter must be passed in order for a submission to be graded, otherwise the total grade will always be 0%." %></p>
          </.help>
        </div>
        <%= if pf[:type].value == :graded do %>
          <.input field={pf[:grade]} type="range" label={ gettext "Grade %" }/>
        <% end %>
        <.input field={pf[:visible]} type="checkbox" label={ gettext "Visible to students before submitting? (only applies when testing before submitting is enabled)"} />
      </div>
      <label class="cursor-pointer">
        <input id={"checkbox_param_#{pf.index}"} type="checkbox" name="exercise[params_delete][]" class="hidden" value={pf.index}/>
        <div class="w-full flex items-center justify-end gap-2 px-4 text-red-600">
          <.icon name="hero-trash" class="w-6 h-6"/>
          <p class="text-red-600"><%= gettext "Delete" %></p>
        </div>
      </label>
    </div>
  </.inputs_for>
  <label class="cursor-pointer flex flex-col items-center">
    <input type="checkbox" name="exercise[params_order][]" class="hidden" />
    <div class="flex items-center gap-2 bg-zinc-300 dark:bg-zinc-600 hover:bg-zinc-400 dark:hover:bg-zinc-500 px-4 py-2 rounded-lg duration-200">
      <.icon name="hero-plus-circle" class="w-6 h-6"/>
      <p><%= gettext "Add parameter" %></p>
    </div>
  </label>
  <% else %>
    <p><%= gettext "Static analysis is not yet available for the selected language." %></p>
  <% end %>
  <%!-- <div class="flex flex-col items-center">
    <button type="button" phx-click="add-parameter" class="mx-auto bg-zinc-300 dark:bg-zinc-500 hover:bg-zinc-400 dark:hover:bg-zinc-400 px-4 py-2 rounded-lg duration-200"><%= "+ " <> gettext "Add parameter" %></button>
  </div> --%>

  <.error :if={length(@form[:total_grade].errors) > 0}><%= dgettext "errors", "The sum of every grade should equal 100!" %></.error>
  <input name="exercise[preview_input]" type="hidden" label={gettext "Preview input"} />
  <:actions>
    <div class="fixed mx-auto bottom-6 left-1/2 -translate-x-1/2 flex flex-col items-center gap-4">
      <.button type="button" id="preview-button" class="flex items-center gap-2" kind={:grey} phx-click={AceGraderWeb.CoreComponents.show_modal("preview-modal")}>
        <.icon name="hero-eye" class="w-5 h-5"/>
        <%= gettext "Preview" %>
      </.button>
      <.button id="submit-button" class="flex items-center gap-2">
        <svg class="w-5 h-5 fill-white" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!--! Font Awesome Pro 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d="M64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V173.3c0-17-6.7-33.3-18.7-45.3L352 50.7C340 38.7 323.7 32 306.7 32H64zm0 96c0-17.7 14.3-32 32-32H288c17.7 0 32 14.3 32 32v64c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V128zM224 288a64 64 0 1 1 0 128 64 64 0 1 1 0-128z"/></svg>
        <%= gettext "Save Exercise" %>
      </.button>
    </div>
  </:actions>
</.simple_form>

<.modal id="preview-modal" >
  <div class="space-y-8">
    <h2 class="text-2xl font-bold"><%= gettext "Preview" %></h2>
    <div class="p-4 space-y-4">
      <div>
        <h3 class="text-xl font-bold"><%= @form[:title].value %></h3>
        <div class="mt-2">
          <.markdown_text content={@form[:description].value} />
        </div>
      </div>
      <hr class="my-4 border-t-2 border-zinc-300 dark:border-zinc-600"/>
      <.editor id="preview-editor" language={@form[:language].value} initial_value={@form[:template].value} field={@form[:preview_input]}/>
    </div>
  </div>
</.modal>